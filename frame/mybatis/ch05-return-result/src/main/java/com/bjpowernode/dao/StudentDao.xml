<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.dao.StudentDao">
    <select id="selectStudentById" resultType="stu" parameterType="java.lang.Integer">
        select * from student where id=#{studentId}
    </select>

    <!--多个参数,使用@Param命名-->
    <select id="selectMulitParam" resultType="stu">
        parameterType="com.bjpowernode.domian.Student">
        select count(*) from student where name=#{myname} or age=#{myage}
        <!-- 没有的属性可以忽略,因此在这里不会报错-->
    </select>

    <!--    <select id="selectStudentResultViewStudent" resultType="view">-->
    <!--第一种自定义的结果集方式(别名)-->
    <select id="selectStudentResultViewStudent" resultType="ViewStudent">
        <!--第二种自定义的结果集(别名)-->
        select * from student where id=#{sid}
    </select>

    <!--查询表中有几行数据-->
    <select id="countStudent" resultType="java.lang.Integer">
select count(*) from student
    </select>

    <!--返回map
    列名是map的key,列值是map的value
    返回map时最多返回一行数据,多余一行会报错
    -->
    <select id="selectMapById" resultType="java.util.HashMap">
        select id,name from Student where id=#{stuid}
    </select>
    <!--使用resultMap
            1.先定义resultMap
            2.在select标签中,使用resultMap来引用定义的resultMap-->
    <!--定义resultMap
        id:自定义名称,表示你定义的这个resultMap
        type:java类型的全限定名称-->
    <resultMap id="studentMap" type="stu">
        <!--列名和java属性的关系
            注解列:使用id属性
            column:列名
            property:java类型的属性名-->
        <id column="id" property="id"/>
        <!--非主键列，使用result-->
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
    </resultMap>
    <select id="selectAllStudents" resultMap="studentMap">
select id,name,email,age from student
    </select>

    <resultMap id="studentMap1" type="com.bjpowernode.domian.MyStudent">
        <!--列名和java属性的关系
            注解列:使用id属性
            column:列名
            property:java类型的属性名-->
        <id column="id" property="stuid"/>
        <!--非主键列，使用result-->
        <result column="name" property="stuname"/>
        <result column="email" property="stuemail"/>
        <result column="age" property="stuage"/>
    </resultMap>
    <!--列名和属性名不一样:第一种方式-->
    <select id="selectmystudent" resultMap="studentMap1">
        select id,name,email,age from student
    </select>
    <!--列名和属性名不一样:第二种方式
            resultType的默认原则是:同名的列值赋值给同名的属性,使用列别名
    -->
    <select id="selectDiffColProperty" resultType="com.bjpowernode.domian.MyStudent">
        select id as stuid,name as stuname,email as stuemail,age as stuage from student
    </select>


    <!--<select id="selectmystudent" resultType="com.bjpowernode.domian.MyStudent">
    select id,name,email,age from student
        </select>-->

    <!--第一种模糊查询,java代码指定like的内容-->
    <select id="selectLikeone" resultType="stu">
        select * from student where name like #{sname}
        <!--拼接时%和sname1之间空格必须有-->
    </select>
    <!--第二种:在mapper文件中拼接like的内容-->
    <select id="selectLiketwo" resultType="stu">
        select * from student where name like "%" #{sname1}
    </select>
</mapper>

 