ch01-hello-spring: spring的IOC,由spring创建对象

实现步骤:
1.创建maven项目
2.加入maven依赖
    spring的依赖,版本5.2.5版本
    Junit依赖
3.创建类(接口和它的实现类)
    和没有使用框架一样,就是普通的类
4.创建spring需要使用的配置文件
    声明类的信息,这些由spring创建和管理
5.测试spring创建对象

ch02-di-xml: 在spring的配置文件,给java对象的属性赋值

di:依赖注入,表示创建对象,给属性赋值

di的实现方式:
    1.在spring的配置文件中,使用标签和属性完成,叫做基于xml的di实现
    2.使用spring中的注解,完成属性赋值,叫做基于注解的di实现

di的语法分类:
    1.set注入(设置注入):spring调用类的set方法,在set方法中可以实现属性的赋值,80%都是使用的set输入
    2.构造注入,spring调用类的有参构造方法,创建对象.在构造方法中完成赋值

实现步骤:
    1.创建maven项目
    2.加入maven依赖
        spring的依赖,版本5.2.5版本
         Junit依赖
    3.创建类(接口和它的实现类)
        和没有使用框架一样,就是普通的类
    4.创建spring需要使用的配置文件
        声明类的信息,这些由spring创建和管理
        通过spring的语法,完成属性的赋值
    5.测试spring创建对象

junit:单元测试,一个工具类库,做测试方法用的
    单元:制定的是方法,一个类中有很多方法,一个方法就称为一个单元
    使用步骤:
        1.使用单元测试,首先要加依赖
        2.创建测试作用的类:叫做测试类
            在src/test/java目录中创建类
        3.创建测试方法:
            1)权限修饰符为public
            2)没有返回值void
            3)方法名称自定义,建议名称是test+你要测试的方法名称
            4)方法的上面要加入@Test注解,这样的方法可以单独执行,不用main方法
